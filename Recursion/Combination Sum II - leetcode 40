class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        
        List<List<Integer>> answer = new ArrayList<>();
        Arrays.sort(candidates);
        
        findCombination(0 , candidates , target, new ArrayList<>(),answer);
        return answer;
    }
    
    public void findCombination(int ind,int[] arr,int target, List<Integer> ds, List<List<Integer>> answer){
        
        if(target == 0){
            answer.add(new ArrayList<>(ds));
            return;
        }
        
        for(int i = ind;i<arr.length;i++){
            
            if(i>ind && arr[i] == arr[i-1]) continue;
            
            if(arr[i]>target) break;
            
            
            ds.add(arr[i]);
            findCombination(i+1,arr,target-arr[i],ds,answer);
            ds.remove(ds.size()-1);
        }
    }
}
