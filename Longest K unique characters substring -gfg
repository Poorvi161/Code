// { Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;

class GfG {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            String s = sc.next();
            int k = sc.nextInt();
            Solution obj = new Solution();
            System.out.println(obj.longestkSubstr(s, k));
        }
    }
}// } Driver Code Ends


// User function Template for Java

class Solution {
    public int longestkSubstr(String s, int k) {
        // code here
        
        
        int right=0;
        int left=0;
        int answer=-1;
        
        HashMap<Character, Integer> memo=new HashMap<>();
        
        for( right=0;right<s.length();right++)
        { // check at index
            Character currentChar= s.charAt(right);
            //check if char is in hashmap if then increment by 1
            if(memo.containsKey(currentChar))
            {
                memo.put(currentChar, memo.get(currentChar)+1);
            }
            //else we will intialise by 1
            else{
                memo.put(currentChar,1);
            }
            //left pointer must be less than right and we have k size window 
            
            while(left<=right && memo.size()>k){
                //we are releasing the elements here because lenght of hashmap>k
                char discard=s.charAt(left);
                memo.put(discard, memo.get(discard)-1);
                left++;
                //if that discard character is zero then we will delete entry from the hjashmap
                if(memo.get(discard)==0)
                {
                    memo.remove(discard);
                }
                
            }
            int temp=right-left+1;
            if(memo.size()==k)
            {
                answer=Math.max(answer,temp);
            }
            }
        return answer;
        
    }
}
