class Solution {
    public int tribonacci(int n) {
        return nthtribonacci(n,new HashMap<Integer,Integer>());
    }
    public int nthtribonacci(int n , HashMap<Integer,Integer> memo)
    {
        if(n<=1)
        {
            return n;
        }
        if(n==2)
        {
            return 1;
        }
        
        int currentKey=n;
        if(memo.containsKey(currentKey))
        {
            return memo.get(n);
            
        }
        
        int a=nthtribonacci(n-1,memo);
        int b=nthtribonacci(n-2,memo);
        int c = nthtribonacci(n-3, memo);
        memo.put(n,a+b+c);
        return a+b+c;
    }
}
