/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<Integer> postorder(Node root) {
        List<Integer> answer=new ArrayList<>();
        Stack<Node> stack= new Stack<>();
        if(root==null)
        {
            return answer;
        }
        stack.push(root);
        while(!stack.empty())
        {
            Node currentNode=stack.pop();
            answer.add(currentNode.val);
            
            List<Node> children=currentNode.children;
            int n=children.size();
            for(int i=0;i<n;i++)
            {
                stack.push(children.get(i));
            }
        }
        Collections.reverse(answer);
        return answer;
     
    }
}
