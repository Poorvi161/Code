/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans=new ArrayList<>();
        solve(root,targetSum,new ArrayList<>(), ans);
        return ans;
    }
    public void solve(TreeNode root,int target, List<Integer> curr, List<List<Integer>> ans)
    {
        if(root==null)
        {
            return ;
        }
        if(root.left==null && root.right==null && target-root.val==0)
        {
            curr.add(root.val);
            ans.add(new ArrayList<>(curr));
            curr.remove(curr.size()-1);
            return;
        }
        curr.add(root.val);
        solve(root.left,target-root.val,curr,ans);
        solve(root.right,target-root.val,curr,ans);
        curr.remove(curr.size()-1);
    }
}
