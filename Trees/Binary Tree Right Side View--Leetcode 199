/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> answer=new ArrayList<>();
        rightSide(root,1,new HashSet<>(),answer);
      return answer;
    }
    private void rightSide(TreeNode root, Integer level, HashSet<Integer> hashSet, List<Integer> answer)
    {
        if (root==null)
        {
            return;
        }
        if(!hashSet.contains(level))
        {
            hashSet.add(level);
            answer.add(root.val);
        }
        rightSide(root.right,level+1,hashSet,answer);

        rightSide(root.left,level+1,hashSet,answer);
        return;
    }
    
}
