/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode searchBST(TreeNode root, int val) {
       /* normal  recursive approach
        if(root==null)
        {
            return null;
        }
        if(root.val==val)
        {
            return root;
        }
        else if(root.val< val)
        {
            return searchBST(root.right,val);
        }
        else
        {
            return searchBST(root.left,val);
        }
        */
        
        // iterative approach
        
        TreeNode current=root;
        while(current!= null)
        {
            if(current.val==val)

            {
                return current;
            }
            
            else if ( current.val < val)
            {
                current=current.right;
            }
            
            else
            {
                current=current.left;
            }
        }
        return null;
    }
}
