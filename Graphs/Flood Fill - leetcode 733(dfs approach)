class Solution {
    public int[][] floodFill(int[][] grid, int sr, int sc, int newColor) {
        //dfs approach (replacing image with grid)
        //corner case
        if(grid[sr][sc]==newColor)
        {
            return grid;
        }
        
        sinkGraph(grid,sr,sc,grid[sr][sc], grid.length,grid[0].length,newColor);
        return grid;
        
        
    }
    private void sinkGraph(int[][] grid, int currentRow, int currentCol, int color, int m, int n,int newColor)
    {
        if(currentRow <0 || currentRow>=m || currentCol<0 || currentCol>= || grid[currentRow][currentCol]!=color)
        {
            return;
        }
        grid[currentRow][currentCol] = newColor;
        
        //up move
        
        sinkGraph(grid,currentRow-1,currentCol,color,m,n,newColor);
        
        //right move
        
        sinkGraph(grid,currentRow,currentCol+1,color,m,n,newColor);
        //down move
        sinkGraph(grid,currentRow+1,currentCol,color,m,n,newColor);
        // left move
        sinkGraph(grid,currentRow,currentCol-1,color,m,n,newColor);
        
        return ;
    }
}
